{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Sublime\\\\JavaScript\\\\orbital_21\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../constants/api';\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // Taking care of states of input fields (NUSNET data)\n  // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n  const [rememberMe, setRememberMe] = useState(false);\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    successMessage: null\n  });\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  }; // Function to handle the submit event\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      \"email\": email,\n      \"password\": password\n    };\n    axios.post(API_BASE_URL + 'login', payload).then(function (response) {\n      if (response.data.code === 200) {\n        // setEmail(prevState => ({\n        //     ..prevState\n        // }))\n        // setPassword(prevState => ({\n        //     ..prevState\n        // }))\n        localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n        redirectToHome();\n        props.showError(null);\n      } else if (response.data.code === 204) {\n        props.showError(\"Username and password do not match\");\n      } else {\n        props.showError(\"Username does not exists\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const redirectToHome = () => {\n    props.history.push('/');\n  };\n\n  const redirectToRegister = () => {\n    props.history.push('/register');\n  };\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      size: \"lg\",\n      controlId: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        autoFocus: true,\n        type: \"email\",\n        value: state.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      size: \"lg\",\n      controlId: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        value: state.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"rmbMe\",\n      size: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Remember Me\",\n        value: rememberMe,\n        checked: rememberMe,\n        onChange: e => setRememberMe(e.currentTarget.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"link\",\n      onClick: () => redirectToRegister(),\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      size: \"lg\",\n      type: \"submit\",\n      disabled: !validateForm(),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"mH1t5LIuiPJMmtZSM/sle7tqst4=\");\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ACER/Sublime/JavaScript/orbital_21/frontend/src/components/Login.jsx"],"names":["Form","useState","Button","API_BASE_URL","ACCESS_TOKEN_NAME","axios","withRouter","Login","props","rememberMe","setRememberMe","state","setState","email","password","successMessage","handleChange","e","id","value","target","prevState","handleSubmit","preventDefault","payload","post","then","response","data","code","localStorage","setItem","token","redirectToHome","showError","catch","error","console","log","history","push","redirectToRegister","validateForm","length","currentTarget","checked"],"mappings":"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","sourcesContent":["import Form from 'react-bootstrap/Form';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../constants/api';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    // Taking care of states of input fields (NUSNET data)\r\n    // const [email, setEmail] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const [state , setState] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    // Function to handle the submit event\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"email\": email,\r\n            \"password\": password,\r\n        }\r\n        axios.post(API_BASE_URL +'login', payload)\r\n            .then(function (response) {\r\n                if (response.data.code === 200){\r\n                    // setEmail(prevState => ({\r\n                    //     ..prevState\r\n                    // }))\r\n                    // setPassword(prevState => ({\r\n                    //     ..prevState\r\n                    // }))\r\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\r\n                    redirectToHome();\r\n                    props.showError(null)\r\n                }\r\n                else if(response.data.code === 204){\r\n                    props.showError(\"Username and password do not match\");\r\n                }\r\n                else{\r\n                    props.showError(\"Username does not exists\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const redirectToRegister = () => {\r\n        props.history.push('/register');\r\n    }\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <Form onSubmit={handleSubmit}/>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={state.email}\r\n                        onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={state.password}\r\n                        onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"rmbMe\" size='lg'>\r\n                    <Form.Check type=\"checkbox\" label=\"Remember Me\" value={rememberMe} checked={rememberMe}\r\n                    onChange={(e) => setRememberMe(e.currentTarget.checked)} />\r\n                </Form.Group>\r\n                <Button variant=\"link\" onClick={() => redirectToRegister()}>Don't have an account?</Button>\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Login\r\n                </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);\r\n\r\n"]},"metadata":{},"sourceType":"module"}