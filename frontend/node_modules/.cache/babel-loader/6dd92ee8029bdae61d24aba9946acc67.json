{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Sublime\\\\JavaScript\\\\orbital_21\\\\frontend\\\\src\\\\components\\\\Inputs.jsx\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Container, Card, Button } from 'react-bootstrap';\nimport MajorSelect from './MajorSelect';\nimport NumSemsSlider from './NumSemsSlider';\nimport ModsTaken from './ModsTaken';\nimport { useState } from 'react';\nimport ProgramList from './ProgramList';\nimport SEPList from './SEPList';\nimport IIPList from './IIPList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inputs = () => {\n  _s();\n\n  // State variable to keep track of major\n  const [major, setMajor] = useState('');\n  const [modList, setModList] = useState([{\n    id: 1,\n    mod: 'Dummy (Please delete)',\n    grade: 'A'\n  }]); // State to keep track of list of programs\n\n  const [progList, setProgList] = useState([{\n    id: 2,\n    progName: 'Dummy (Please delete)',\n    semester: 1\n  }]); // State to keep track of the list of SEP mods to take\n\n  const [sepList, setSEPList] = useState([{\n    id: 3,\n    modName: 'Dummy (Please delete)'\n  }]); // State to keep track of the list of IIP mods to take\n\n  const [iipList, setIIPList] = useState([{\n    id: 4,\n    modName: 'Dummy (Please delete)'\n  }]); // Control state of how many mods to be added\n\n  const [sems, setSem] = useState(0); // Function to add a new module \n\n  const addMod = modData => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newMod = {\n      id,\n      ...modData\n    };\n    setModList([...modList, newMod]);\n  }; // Function to remove a module\n\n\n  const deleteMod = id => {\n    setModList(modList.filter(mod => mod.id !== id));\n  }; // Function to add program, note to take care of semester data as well \n\n\n  const addProg = prog => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newProg = {\n      id,\n      ...prog\n    };\n    setProgList([...progList, newProg]);\n  }; // Function to remove program\n\n\n  const deleteProg = id => {\n    setProgList(progList.filter(prog => prog.id !== id));\n  }; // Function to add SEP module \n\n\n  const addSEPMod = sepMod => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newSEP = {\n      id,\n      ...sepMod\n    };\n    setSEPList([...sepList, newSEP]);\n  }; // Function to remove SEP module\n\n\n  const deleteSEPMod = id => {\n    setSEPList(sepList.filter(sepMod => sepMod.id !== id));\n  }; // Function to add an IIP module\n\n\n  const addIIPMod = iipMod => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newIIP = {\n      id,\n      ...iipMod\n    };\n    setIIPList([...iipList, newIIP]);\n  }; // Function to remove IIP module\n\n\n  const deleteIIPMod = id => {\n    setIIPList(iipList.filter(iipMod => iipMod.id !== id));\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const allModData = {\n      major: major,\n      sems: sems,\n      takenList: modList,\n      progList: progList,\n      sepList: sepList,\n      iipList: iipList\n    };\n    axios.get('http://localhost:3001/plan', allModData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center mt-5\",\n      border: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Enter the following inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(MajorSelect, {\n                setMajor: setMajor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(NumSemsSlider, {\n                setSem: setSem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ModsTaken, {\n                modList: modList,\n                onAdd: addMod,\n                onDelete: deleteMod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ProgramList, {\n                progList: progList,\n                onAdd: addProg,\n                onDelete: deleteProg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(SEPList, {\n                sepList: sepList,\n                addSEPMod: addSEPMod,\n                deleteSEPMod: deleteSEPMod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(IIPList, {\n                iipList: iipList,\n                addIIPMod: addIIPMod,\n                deleteIIPMod: deleteIIPMod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          variant: \"success\",\n          children: \"Generate Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Inputs, \"SCZoAEi+xxCQOxH0MgXQipg9mS0=\");\n\n_c = Inputs;\nexport default Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"sources":["C:/Users/ACER/Sublime/JavaScript/orbital_21/frontend/src/components/Inputs.jsx"],"names":["Row","Col","Container","Card","Button","MajorSelect","NumSemsSlider","ModsTaken","useState","ProgramList","SEPList","IIPList","axios","Inputs","major","setMajor","modList","setModList","id","mod","grade","progList","setProgList","progName","semester","sepList","setSEPList","modName","iipList","setIIPList","sems","setSem","addMod","modData","Math","floor","random","newMod","deleteMod","filter","addProg","prog","newProg","deleteProg","addSEPMod","sepMod","newSEP","deleteSEPMod","addIIPMod","iipMod","newIIP","deleteIIPMod","handleClick","e","preventDefault","allModData","takenList","get"],"mappings":"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","sourcesContent":["import { Row, Col, Container, Card, Button } from 'react-bootstrap'\r\nimport MajorSelect from './MajorSelect'\r\nimport NumSemsSlider from './NumSemsSlider'\r\nimport ModsTaken from './ModsTaken'\r\nimport { useState } from 'react'\r\nimport ProgramList from './ProgramList'\r\nimport SEPList from './SEPList'\r\nimport IIPList from './IIPList'\r\nimport axios from 'axios';\r\n\r\nconst Inputs = () => {\r\n    // State variable to keep track of major\r\n    const [major, setMajor] = useState('')\r\n\r\n    const [modList, setModList] = useState([\r\n        {\r\n            id: 1, \r\n            mod: 'Dummy (Please delete)', \r\n            grade: 'A'\r\n        }\r\n    ])\r\n\r\n    // State to keep track of list of programs\r\n    const [progList, setProgList] = useState([\r\n        {\r\n            id: 2,\r\n            progName: 'Dummy (Please delete)', \r\n            semester: 1\r\n        }\r\n    ])\r\n\r\n    // State to keep track of the list of SEP mods to take\r\n    const [sepList, setSEPList] = useState([\r\n        {\r\n            id: 3, \r\n            modName: 'Dummy (Please delete)'\r\n        }\r\n    ])\r\n\r\n    // State to keep track of the list of IIP mods to take\r\n    const [iipList, setIIPList] = useState([\r\n        {\r\n            id: 4, \r\n            modName: 'Dummy (Please delete)'\r\n        }\r\n    ])\r\n\r\n    // Control state of how many mods to be added\r\n    const [sems, setSem] = useState(0)\r\n\r\n    // Function to add a new module \r\n    const addMod = (modData) => {\r\n        const id = Math.floor(Math.random() * 100) + 1\r\n        const newMod = {id, ...modData}\r\n        setModList([...modList, newMod])\r\n    } \r\n\r\n    // Function to remove a module\r\n    const deleteMod = (id) => {\r\n        setModList(modList.filter((mod) => (\r\n            mod.id !== id\r\n        )))\r\n    }\r\n\r\n    // Function to add program, note to take care of semester data as well \r\n    const addProg = prog => {\r\n        const id = Math.floor(Math.random() * 100) + 1\r\n        const newProg = {id, ...prog}\r\n        setProgList([...progList, newProg])\r\n    }\r\n\r\n    // Function to remove program\r\n    const deleteProg = (id) => {\r\n        setProgList(progList.filter(prog => (\r\n            prog.id !== id\r\n        )))\r\n    }\r\n\r\n    // Function to add SEP module \r\n    const addSEPMod = (sepMod) => {\r\n        const id = Math.floor(Math.random() * 100) + 1\r\n        const newSEP = {id, ...sepMod}\r\n        setSEPList([...sepList, newSEP])\r\n    }\r\n\r\n    // Function to remove SEP module\r\n    const deleteSEPMod = (id) => {\r\n        setSEPList(sepList.filter(sepMod => (\r\n            sepMod.id !== id\r\n        )))\r\n    }\r\n\r\n    // Function to add an IIP module\r\n    const addIIPMod = (iipMod) => {\r\n        const id = Math.floor(Math.random() * 100) + 1\r\n        const newIIP = {id, ...iipMod}\r\n        setIIPList([...iipList, newIIP])\r\n    }\r\n\r\n    // Function to remove IIP module\r\n    const deleteIIPMod = (id) => {\r\n        setIIPList(iipList.filter(iipMod => (\r\n            iipMod.id !== id\r\n        )))\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        const allModData = {\r\n            major: major,\r\n            sems : sems,\r\n            takenList : modList, \r\n            progList : progList, \r\n            sepList : sepList,\r\n            iipList : iipList\r\n        }\r\n\r\n        axios.get('http://localhost:3001/plan', allModData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className='text-center mt-5' border='success'>\r\n                <Card.Header >Enter the following inputs</Card.Header>\r\n                <Card.Body>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col><MajorSelect setMajor={setMajor}/></Col>\r\n                            <Col><NumSemsSlider setSem={setSem}/></Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col><ModsTaken modList={modList} onAdd={addMod} onDelete={deleteMod}/></Col>\r\n                            <Col><ProgramList progList={progList} onAdd={addProg} onDelete={deleteProg}/></Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col><SEPList sepList={sepList} addSEPMod={addSEPMod} deleteSEPMod={deleteSEPMod} /></Col>\r\n                            <Col><IIPList iipList={iipList} addIIPMod={addIIPMod} deleteIIPMod={deleteIIPMod} /></Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button onClick={handleClick} variant='success'>Generate Plan</Button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inputs"]},"metadata":{},"sourceType":"module"}